/**
 * Project Generator - مولد المشاريع
 * يستخدم AI Engine لتوليد المشاريع وحفظها
 */

import fs from 'fs/promises';
import path from 'path';
import { generateWebsite, generateWebApp, generateEcommerce } from './aiEngine.mjs';

const PROJECTS_DIR = process.env.PROJECTS_DIR || '/tmp/infinity-projects';

/**
 * إنشاء مجلد المشروع
 */
async function ensureProjectDir(projectId) {
  const projectPath = path.join(PROJECTS_DIR, projectId);
  await fs.mkdir(projectPath, { recursive: true });
  return projectPath;
}

/**
 * حفظ ملف في المشروع
 */
async function saveFile(projectPath, filePath, content) {
  const fullPath = path.join(projectPath, filePath);
  const dir = path.dirname(fullPath);
  
  await fs.mkdir(dir, { recursive: true });
  await fs.writeFile(fullPath, content, 'utf-8');
}

/**
 * توليد موقع ويب
 */
export async function buildWebsite(projectId, description, options = {}) {
  try {
    console.log(`[ProjectGenerator] Building website: ${projectId}`);
    
    const projectPath = await ensureProjectDir(projectId);
    const style = options.style || 'modern';
    
    // توليد الكود باستخدام AI
    const htmlCode = await generateWebsite(description, style);
    
    // حفظ الملف
    await saveFile(projectPath, 'index.html', htmlCode);
    
    // إنشاء ملف README
    const readme = `# ${options.title || 'Website'}

Generated by InfinityX Platform

## Description
${description}

## How to use
Simply open \`index.html\` in your browser or deploy to any static hosting service.

## Features
- Responsive design
- Modern UI
- SEO optimized
- Fast loading

---
Generated on: ${new Date().toISOString()}
`;
    
    await saveFile(projectPath, 'README.md', readme);
    
    console.log(`[ProjectGenerator] Website built successfully: ${projectPath}`);
    
    return {
      success: true,
      projectPath,
      files: ['index.html', 'README.md'],
      url: null // سيتم تعيينه بعد النشر
    };
  } catch (error) {
    console.error(`[ProjectGenerator] Error building website:`, error);
    throw error;
  }
}

/**
 * توليد تطبيق ويب
 */
export async function buildWebApp(projectId, description, options = {}) {
  try {
    console.log(`[ProjectGenerator] Building web app: ${projectId}`);
    
    const projectPath = await ensureProjectDir(projectId);
    const features = options.features || [];
    
    // توليد الكود باستخدام AI
    const result = await generateWebApp(description, features);
    
    // حفظ جميع الملفات
    const files = [];
    for (const [filePath, content] of Object.entries(result.files)) {
      await saveFile(projectPath, filePath, content);
      files.push(filePath);
    }
    
    // إنشاء ملف README
    const readme = `# ${options.title || 'Web Application'}

Generated by InfinityX Platform

## Description
${description}

## Features
${features.map(f => `- ${f}`).join('\n') || '- Modern web application'}

## Setup
\`\`\`bash
npm install
npm run dev
\`\`\`

## Build for production
\`\`\`bash
npm run build
\`\`\`

---
Generated on: ${new Date().toISOString()}
`;
    
    await saveFile(projectPath, 'README.md', readme);
    files.push('README.md');
    
    console.log(`[ProjectGenerator] Web app built successfully: ${projectPath}`);
    
    return {
      success: true,
      projectPath,
      files,
      url: null
    };
  } catch (error) {
    console.error(`[ProjectGenerator] Error building web app:`, error);
    throw error;
  }
}

/**
 * توليد متجر إلكتروني
 */
export async function buildEcommerce(projectId, description, options = {}) {
  try {
    console.log(`[ProjectGenerator] Building e-commerce store: ${projectId}`);
    
    const projectPath = await ensureProjectDir(projectId);
    const products = options.products || [];
    
    // توليد الكود باستخدام AI
    const result = await generateEcommerce(description, products);
    
    // حفظ جميع الملفات
    const files = [];
    for (const [filePath, content] of Object.entries(result.files)) {
      await saveFile(projectPath, filePath, content);
      files.push(filePath);
    }
    
    // إنشاء ملف README
    const readme = `# ${options.title || 'E-commerce Store'}

Generated by InfinityX Platform

## Description
${description}

## Products
${products.map(p => `- ${p}`).join('\n') || '- Sample products included'}

## Setup
\`\`\`bash
npm install
npm run dev
\`\`\`

## Build for production
\`\`\`bash
npm run build
\`\`\`

## Features
- Product catalog
- Shopping cart
- Checkout process
- Responsive design
- Admin panel ready

---
Generated on: ${new Date().toISOString()}
`;
    
    await saveFile(projectPath, 'README.md', readme);
    files.push('README.md');
    
    console.log(`[ProjectGenerator] E-commerce store built successfully: ${projectPath}`);
    
    return {
      success: true,
      projectPath,
      files,
      url: null
    };
  } catch (error) {
    console.error(`[ProjectGenerator] Error building e-commerce:`, error);
    throw error;
  }
}

/**
 * الحصول على ملفات المشروع
 */
export async function getProjectFiles(projectId) {
  const projectPath = path.join(PROJECTS_DIR, projectId);
  
  try {
    const files = await fs.readdir(projectPath, { recursive: true });
    return files;
  } catch (error) {
    console.error(`[ProjectGenerator] Error reading project files:`, error);
    return [];
  }
}

/**
 * قراءة محتوى ملف
 */
export async function readProjectFile(projectId, filePath) {
  const fullPath = path.join(PROJECTS_DIR, projectId, filePath);
  
  try {
    const content = await fs.readFile(fullPath, 'utf-8');
    return content;
  } catch (error) {
    console.error(`[ProjectGenerator] Error reading file:`, error);
    return null;
  }
}
